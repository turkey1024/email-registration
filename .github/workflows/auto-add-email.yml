name: Auto Add Email Forwarding
on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  process-email:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Process email rules
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        run: |
          # 处理所有registrations/下的json文件
          for file in $(find registrations/ -name '*.json'); do
            echo "🔍 Processing: $file"
            
            # 提取邮箱（允许最简格式{"email":"x@x.com"}）
            email=$(jq -r '.email | select(.!=null)' "$file" 2>/dev/null)
            if [ -z "$email" ]; then
              echo "❌ 错误：文件 $file 缺少有效的email字段"
              continue
            fi

            # 验证邮箱格式
            if [[ ! "$email" =~ ^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$ ]]; then
              echo "❌ 错误：'$email' 不是有效的邮箱地址"
              continue
            fi

            # 使用文件名作为前缀（自动转小写并过滤特殊字符）
            prefix=$(basename "$file" .json | tr '[:upper:]' '[:lower:]' | tr -cd 'a-z0-9-')
            if [ -z "$prefix" ]; then
              echo "❌ 错误：文件名无效（只能包含字母数字和短横线）"
              continue
            fi

            # 添加Cloudflare转发规则
            echo "✅ 添加: $prefix@qxz.qzz.io → $email"
            response=$(curl -s -X POST \
              "https://api.cloudflare.com/client/v4/zones/$CLOUDFLARE_ZONE_ID/email/routing/rules" \
              -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
              -H "Content-Type: application/json" \
              --data '{
                "matchers": [{
                  "type": "literal",
                  "field": "to",
                  "value": "'"$prefix"'@qxz.qzz.io"
                }],
                "actions": [{
                  "type": "forward",
                  "value": ["'"$email"'"]
                }]
              }')

            # 检查API响应
            if [[ $(echo "$response" | jq -r '.success') != "true" ]]; then
              echo "❌ API错误: $(echo "$response" | jq -r '.errors[0].message')"
            else
              echo "🎉 成功添加规则ID: $(echo "$response" | jq -r '.result.id')"
            fi
          done

